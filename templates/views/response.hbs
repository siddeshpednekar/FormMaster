<!DOCTYPE html>
<html>

<head>
  <title>User Responses Analysis</title>
  <style>
    body {
      font-family: 'Arial', sans-serif;
      margin: 20px;
      background-color: #121212; 
      color: #ffffff; 
    }

    .container {
      max-width: 800px;
      margin: 0 auto;
      padding: 20px;
      background-color: #1e1e1e; 
      border-radius: 10px;
      box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5); 
    }

    .header {
      text-align: center;
      margin-bottom: 20px;
    }

    .header h1 {
      font-size: 36px;
      margin: 0;
      color: #663ab5; 
    }
    .header h2 {
      font-size: 36px;
      margin: 0;
      color: white; 
    }

    .table-container {
      max-width: 100%;
      overflow: auto;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      margin-bottom: 20px;
    }

    table, th, td {
      border: 1px solid #ffffff;
      text-align: left;
    }

    th, td {
      padding: 10px;
    }

    th {
      background-color: #663ab5;
      color: #ffffff;
    }

    tr:nth-child(even) {
      background-color: #2a2a2a; 
    }

    .add-button {
      display: inline-block;
      padding: 10px 20px;
      font-size: 18px;
      background-color: #663ab5; 
      color: #ffffff; 
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }

    .add-button:hover {
      background-color: #452286; 
    }
    #barChart {
    max-width: 1000px; 
    margin: 10rem 20rem;
  }
  </style>
</head>

<body>
  <div class="container">
    <div class="header">
      <h1>User Responses Analysis</h1>
      <h2 class="">Rank</h2>
    </div>
    
    <div class="table-container">
  <table>
    <thead>
      <tr>
        <th>User Name</th>
        <th>Email</th>
        <th>Time of Submission</th>
      </tr>
    </thead>
    <tbody id="responseTableBody">
    </tbody>
  </table>
</div>
    

  </div>
  <canvas id="barChart"></canvas>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

  <script>
let barChart = null; 

async function fetchResponses() {
  try {
    const pathSegments = window.location.pathname.split('/');
    const formId = pathSegments[pathSegments.length - 1];

    if (!formId) {
      console.error('Form ID not found in the URL.');
      return;
    }

    const url = `http://localhost:3000/get-responses/${formId}`;
    const response = await fetch(url);
    const responseData = await response.json();

    if (!response.ok) {
      throw new Error('Error fetching responses.');
    }

    console.log('Fetched Responses:', responseData);
    const data1 = responseData.data1; 
    console.log("Data1: ", data1); 

    displayResponses(responseData);

    if (barChart !== null) {
      barChart.destroy();
    }

    const names = data1.map(item => item.name);
    const numQuestionsAnswered = data1.map(item => item.num_correct_responses);
    console.log(numQuestionsAnswered);
    const ctx = document.getElementById('barChart').getContext('2d');

    barChart = new Chart(ctx, {
      type: 'bar',
      data: {
        labels: names,
        datasets: [
          {
            label: 'Number of Questions Answered',
            data: numQuestionsAnswered,
            backgroundColor: 'rgb(102, 58, 181)', 
          },
        ],
      },
      options: {
        scales: {
          y: {
            beginAtZero: true,
            title: {
              display: true,
              text: 'Number of Questions Answered',
            },
          },
        },
        animation: {
              duration: 6000, 
              easing: 'easeOutQuart', 
            },
      },
    });
  } catch (error) {
    console.error('Error fetching responses:', error);
  }
}



document.addEventListener('DOMContentLoaded', fetchResponses);


function displayResponses(responseData) {
  const responseTableBody = document.getElementById('responseTableBody');
  responseTableBody.innerHTML = ''; 

  const responses = responseData.data; 

  for (const response of responses) {
    const formattedResponseTime = new Date(response.response_time).toLocaleString('en-US', { timeZone: 'UTC' });
    responseTableBody.innerHTML += `
      <tr>
        <td>${response.name}</td>
        <td>${response.email}</td>
        <td>${formattedResponseTime}</td>
      </tr>
    `;
  }
}

document.addEventListener('DOMContentLoaded', () => {
  fetchResponses(); 
});


  </script>
</body>

</html>
